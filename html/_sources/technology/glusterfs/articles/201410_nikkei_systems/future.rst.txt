**********
将来の展望
**********

先述の通り、GlusterFSは高度にモジュール化された分散ファイルシステムである。また、多様なインタフェースを持つ汎用性の高さが、一つのアイデンティティである。
ゆえに、その将来性は、モジュール構造を利用した機能の追加・拡張と、libgfapiを始めとする各種インタフェースを利用した他のソフトウェアとのインテグレーションにかかっていると言える。また、オープンソース・ソフトウェアである以上、開発コミュニティに対してツールやサポートを提供し、モジュール開発の敷居を下げていく必要があるだろう。
今後も、ユーザの選択肢が広がり続ける可能性とポテンシャルを、GlusterFSは持っている。そして、どのように広がるかは、ユーザコミュニティの声にかかっていると言える。

最後に、将来の展望として、GlusterFSの最新版であるバージョン3.6の紹介と、将来の機能追加拡張計画を紹介する。

=============
GlusterFS 3.6
=============

現時点でのGlusterFSの最新版は、2014年8月にリリースされた、GlusterFS 3.6である。このバージョンで追加された新機能及び機能改善を紹介する。[#]_

.. [#] なお、本稿執筆時点ではリリースされていないため、実際のリリースと差異がある可能性がある。

-----------------
SSLサポートの改善
-----------------

glusterdによるマネジメント用の通信で、SSLを有効化する。同様に、暗号化と認証だけでなく、認可の仕組みにも、SSLを利用する。
SSL暗号化スイートの一つ「Cipher」への対応等、オプションを追加する。
また、マルチスレッドでデータを転送する際の一貫性レベルの引き上げに関連するバグを修正する。

-------------------------------
ヘテロジニアスなbrickのサポート
-------------------------------

DHTによる分散配置の重み付けとして、brickの容量を考慮できるようにする。

------------------------------------------------
Erasure Codeをベースとしたdisperseトランスレータ
------------------------------------------------

RAID 5のようなデータの冗長化を実現する。

--------------------
volume単位でのロック
--------------------

従来は、glusterコマンドはストレージプール全体に対してロックを行っていたが、volume単位でのロックをサポートする。

---------
AFRの改善
---------

Extended AttributeにおけるAFRのチェンジログに、一貫性、永続性、ユニーク性を持たせる。これにより、例えばbrickの削除とself-healとの間で発生する可能性がある競合を解決することができる。
また、これに伴い、AFR自体のリファクタリングと再設計を行う。これにより、self-healと他の操作との競合を解決し、また、メンテナンス性を向上させる。

----------
ログの改善
----------

メッセージIDを導入することで、収集したログを解析に役立てられるようにする。

----------------------
peerに付与するIDの改善
----------------------

これまでは、内部的にはUUIDで、外部向けにはホスト名で、peerを特定していた。しかし、peerが複数のネットワークに接続されている、あるいは、複数のIPアドレスを持つような場合に、一意性を担保できなかった。これを改善する。

------------------------
volumeのスナップショット
------------------------

GlusterFSのvolumeごとのスナップショットを取ることができるようにする。これはLVMの機能を利用したものであり、オンラインで実行可能である。
また、これに伴い、バリア機能と"barrier-timeout"パラメタを追加する。これにより、glusterdによるスナップショット実行、brickに対して実行されているファイル操作、brickにおけるスナップショット実行との間での調整が行えるようにする。

----------
RDMAの改善
----------

RDMAに関する各種問題に対する対応を行った上で、トランスポートに（デフォルトのTCPではなく）RDMAを指定する際に、警告が表示されないようにする。これにより、パフォーマンスの向上、TCPと共存した場合のメモリ破壊防止、InfiniBandのCM(Connection Manager)との連携等を実現する。


=================
GlusterFS 3.7以降
=================

将来の対応が予定されている機能の紹介を行う。[#]_

.. [#] 対応が約束・確定されているものではないことに留意。

--------------
データの階層化
--------------

ファイルやストレージの特性に応じて、tieringやHSMと呼ばれるような形での分散配置をサポートする。

--------------------------
チェイン・レプリケーション
--------------------------

AFRの代替として機能するレプリケーション機能を実装する。GlusterFSサーバ側で、ジャーナルをベースにレプリケーションが行えるようにする。

----------------------------------------
1000ノードを超える規模でのglusterdの実行
----------------------------------------

現状のglusterdによるマネジメントプロトコルは、O(n)であるが、これをPaxos又はRaftベースのより小さなものへとリプレイスすることで、スケーラビリティを向上する。

-------------------
Trashトランスレータ
-------------------

GlusterFS上のファイルを削除する際に、実際に削除するのではなく、ゴミ箱ディレクトリに対象ファイルを移動することができるオプションを追加する。これにより、オペレーションのミスを救済する。

----------------------
オブジェクト・カウント
----------------------

volumeやディレクトリをクローリングすることなく、配下にあるオブジェクトの数を数えることができるようにする。

--------------------------------------
カスタム・トランスレータ追加のサポート
--------------------------------------

C又はPythonでユーザが独自開発したトランスレータを、GlusterFSにインストールする仕組みを導入する。
GluPyを利用したプロトタイピングとともに、開発コミュニティをサポートする。

--------------------------------
LinuxスタイルなNFS設定のサポート
--------------------------------

exportsやnetgroups authenticationなど、従来のGlusterFSのNFSサーバではサポートしていなかった、LinuxのNFSサーバ関連の機能をサポートする。

-----------------
split-brainの抑止
-----------------

brickがダウンした際に書き込まれているファイルを、破棄するものとしてマーキングする。これにより、split-brainの一因を排除する。但し、ネットワーク断によるsplit-brainには対応できない。

-----------------------------------
ポリシーベースによるsplit-brain解決
-----------------------------------

split-brainが検出された際に、予め指定されたポリシーに沿って自動的に解決することができるようにする。

------------------------------
マネジメント機能のREST API提供
------------------------------

従来はglusterコマンド(CLI)で行っていた操作を、HTTPでも実行できるようにする。

-------------------------------------------
libgfapiのArchipelagoとのインテグレーション
-------------------------------------------

分散ストレージ・レイヤを提供するオープンソース・ソフトウェア「Archipelago」 [#]_ とGlusterFSが連携できるようにすることで、従来の分散ファイルシステムとは全く異なる利用形態を、柔軟に実現できるようにする。

.. [#] https://github.com/grnet/archipelago

